// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjetoEngSoftware.Contexts;

namespace ProjetoEngSoftware.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ProjetoEngSoftware.Models.Etnia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_etnia")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnName("ds_etnia")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_etnia");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Exame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_exame")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NomeExame")
                        .HasColumnName("nm_exame")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_exame");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Laudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_laudo")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescricaoLaudo")
                        .HasColumnType("text");

                    b.Property<int?>("ExameId")
                        .HasColumnType("integer");

                    b.Property<int?>("MedicoLaudoId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ExameId");

                    b.HasIndex("MedicoLaudoId");

                    b.ToTable("tb_laudo");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<string>("UserLogin")
                        .HasColumnName("login")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_login");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Medico", b =>
                {
                    b.Property<int>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_medico")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Crm")
                        .HasColumnName("crm")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnName("nm_medico")
                        .HasColumnType("text");

                    b.HasKey("IdMedico");

                    b.ToTable("tb_medico");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.MedicoProfessor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id_docente")
                        .HasColumnType("integer");

                    b.Property<string>("DescricaoTitulacao")
                        .HasColumnName("ds_titulacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_docente");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.MedicoResidente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id_residente")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataResidencia")
                        .HasColumnName("dt_residencia")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("tb_residente");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_paciente")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("dt_nascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EtniaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnName("nm_paciente")
                        .HasColumnType("text");

                    b.Property<char>("Sexo")
                        .HasColumnName("tp_sexo")
                        .HasColumnType("character(1)");

                    b.HasKey("Id");

                    b.HasIndex("EtniaId");

                    b.ToTable("tb_paciente");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.PedidoExame", b =>
                {
                    b.Property<int>("IdPedidoExame")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataExame")
                        .HasColumnName("dt_exame")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ExameId")
                        .HasColumnType("integer");

                    b.Property<string>("HipoteseDiagnostica")
                        .HasColumnName("ds_hipotese_diagnostica")
                        .HasColumnType("text");

                    b.Property<int?>("MedicoIdMedico")
                        .HasColumnType("integer");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Recomendacoes")
                        .HasColumnName("ds_recomendacoes")
                        .HasColumnType("text");

                    b.HasKey("IdPedidoExame");

                    b.HasIndex("ExameId");

                    b.HasIndex("MedicoIdMedico");

                    b.HasIndex("PacienteId");

                    b.ToTable("tb_pedido_exame");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Laudo", b =>
                {
                    b.HasOne("ProjetoEngSoftware.Models.Exame", "Exame")
                        .WithMany()
                        .HasForeignKey("ExameId");

                    b.HasOne("ProjetoEngSoftware.Models.MedicoResidente", "MedicoLaudo")
                        .WithMany()
                        .HasForeignKey("MedicoLaudoId");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Login", b =>
                {
                    b.HasOne("ProjetoEngSoftware.Models.Medico", "Medico")
                        .WithOne("Login")
                        .HasForeignKey("ProjetoEngSoftware.Models.Login", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.MedicoProfessor", b =>
                {
                    b.HasOne("ProjetoEngSoftware.Models.Medico", "Medico")
                        .WithOne("Professor")
                        .HasForeignKey("ProjetoEngSoftware.Models.MedicoProfessor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.MedicoResidente", b =>
                {
                    b.HasOne("ProjetoEngSoftware.Models.Medico", "Medico")
                        .WithOne("Residente")
                        .HasForeignKey("ProjetoEngSoftware.Models.MedicoResidente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.Paciente", b =>
                {
                    b.HasOne("ProjetoEngSoftware.Models.Etnia", "Etnia")
                        .WithMany()
                        .HasForeignKey("EtniaId");
                });

            modelBuilder.Entity("ProjetoEngSoftware.Models.PedidoExame", b =>
                {
                    b.HasOne("ProjetoEngSoftware.Models.Exame", "Exame")
                        .WithMany()
                        .HasForeignKey("ExameId");

                    b.HasOne("ProjetoEngSoftware.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoIdMedico");

                    b.HasOne("ProjetoEngSoftware.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
